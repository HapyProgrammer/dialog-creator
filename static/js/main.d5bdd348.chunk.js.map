{"version":3,"sources":["components/images/Bean.jpg","components/images/Elfo.jpg","components/images/Luci.jpg","components/images/Mertz.jpg","components/images/Zog.jpg","components/images/Portrait_Placeholder.png","components/TopBar.js","actions/dialogActions.js","actions/types.js","components/DialogPiece.js","components/DialogEditor.js","components/DialogTester.js","reducers/dialogReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TopBar","props","handleAddDialogBox","bind","handleToggleShowChar","handleToggleShowCharChoice","playButtonPressed","state","toggleShowChar","toggleShowCharChoice","charName","isChoice","this","addDialogBox","dialogBoxInfo","setState","scrollTop","toggleTest","editorState","toggleHideEditor","animateScroll","scrollToTop","className","title","onClick","src","Bean","alt","draggable","Elfo","Luci","Mertz","Zog","style","left","Component","connect","howManyDialogBoxes","dialog","characterName","dBoxInfo","dispatch","a","newId","currentUsedId","i","length","push","id","includes","type","payload","image","DialogPiece","handleUpdateText","handleNodeDrag","handleDiagDrag","handleDiagStop","handleStop","handleDropEnter","handleDropLeave","componentDidMount","checkWhichColorNode","nodeDragging","pointerEvent","deltaPosition","character","diagPosition","startPosition","x","y","e","updateDialogBoxText","target","value","ui","newPos","deltaX","deltaY","updateState","updateDiagPosition","droppingId","createNodeConnection","nodeConnections","updateDroppingId","newColor","forEach","top","background","border","borderColor","axis","handle","defaultPosition","position","bounds","scale","onDrag","onStop","onMouseEnter","onMouseLeave","pointerEvents","boxShadow","removeDialogBox","characterImage","placeholder","onChange","defaultValue","content","bottom","cursor","propTyes","PropTypes","func","isRequired","array","number","stateChanged","dialogBoxObject","newdialogBoxInfo","filter","element","text","newDialogBoxInfo","findIndex","reset","startId","endId","newNodeConnections","canAdd","connectedToChoice","find","cutHere","sort","b","splice","DialogEditor","checkHowManyDialogsToShow","renderNodeConnections","dialogPieceCount","charImage","PortraitPlaceholder","newDialogPiece","key","nodeRender","startPoint","endPoint","newLine","width","height","x1","y1","x2","y2","stroke","dialogPieceRender","nodes","DialogTester","toggleDialogTestStart","renderDialogBoxes","continueDialogSequence","backButton","restartButton","choiceOnClick","dialogTestStart","showingDialog","console","log","sortDialogSequence","sortedDialogSequence","dialogRender","nameOfClass","newRender","isAChoice","choiceStart","newSorted","renderTheDialog","onAnimationEnd","startFromHere","previousSortedDialog","sortedIDSequence","undefined","foundNumbers","notAvailableNumbers","startNode","endNode","GetFirstNode","startAndEndNodes","numberLookingFor","choices","canContinue","AddNodeToSort","GetAllChoices","choiceID","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","toggleShowTester","showTester","hideEditor","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d5bdd348.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Bean.5907709d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Elfo.7b03790a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Luci.ef12f0c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mertz.85e71af0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Zog.d4d56491.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Portrait_Placeholder.4788048f.png\";","import React, { Component } from \"react\";\r\nimport \"../styles/style.css\";\r\nimport { addDialogBox } from \"../actions/dialogActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Bean, Elfo, Luci, Mertz, Zog } from \"./images/Images\";\r\nimport { animateScroll } from \"react-scroll\";\r\n\r\nclass TopBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleAddDialogBox = this.handleAddDialogBox.bind(this);\r\n    this.handleToggleShowChar = this.handleToggleShowChar.bind(this);\r\n    this.handleToggleShowCharChoice = this.handleToggleShowCharChoice.bind(\r\n      this\r\n    );\r\n    this.playButtonPressed = this.playButtonPressed.bind(this);\r\n    this.state = {\r\n      toggleShowChar: false,\r\n      toggleShowCharChoice: false\r\n    };\r\n  }\r\n  handleAddDialogBox(charName, isChoice) {\r\n    this.props.addDialogBox(charName, this.props.dialogBoxInfo, isChoice);\r\n    isChoice ? this.handleToggleShowCharChoice() : this.handleToggleShowChar();\r\n  }\r\n\r\n  handleToggleShowChar() {\r\n    this.setState({ toggleShowChar: !this.state.toggleShowChar });\r\n  }\r\n\r\n  handleToggleShowCharChoice() {\r\n    this.setState({ toggleShowCharChoice: !this.state.toggleShowCharChoice });\r\n  }\r\n\r\n  playButtonPressed() {\r\n    this.scrollTop();\r\n    this.props.toggleTest();\r\n    if (this.props.editorState) {\r\n      this.props.toggleHideEditor();\r\n    }\r\n  }\r\n  scrollTop() {\r\n    animateScroll.scrollToTop();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"topbar\">\r\n        <div className=\"title\" title=\"DIALOG CREATOR\">\r\n          DIALOG CREATOR\r\n        </div>\r\n        <div className=\"tools\">\r\n          <button\r\n            onClick={this.handleToggleShowChar}\r\n            className=\"new-char-button\"\r\n          >\r\n            <p>New Character</p>\r\n          </button>\r\n          <button\r\n            onClick={this.handleToggleShowCharChoice}\r\n            className=\"new-char-button\"\r\n          >\r\n            <p>New Choice</p>\r\n          </button>\r\n          <div className=\"tools-middle\">\r\n            <button className=\"play-button\" onClick={this.playButtonPressed}>\r\n              <div className=\"play-icon\"></div>\r\n            </button>\r\n          </div>\r\n\r\n          {this.state.toggleShowChar && (\r\n            ///THIS IS TEMPORARY\r\n            <div className=\"choose-next-character\">\r\n              <button onClick={() => this.handleAddDialogBox(\"Bean\", false)}>\r\n                <img src={Bean} alt=\"Bean\" draggable={false} />\r\n              </button>\r\n              <button onClick={() => this.handleAddDialogBox(\"Elfo\", false)}>\r\n                <img src={Elfo} alt=\"Elfo\" draggable={false} />\r\n              </button>\r\n              <button onClick={() => this.handleAddDialogBox(\"Luci\", false)}>\r\n                <img src={Luci} alt=\"Luci\" draggable={false} />\r\n              </button>\r\n              <button onClick={() => this.handleAddDialogBox(\"Mertz\", false)}>\r\n                <img src={Mertz} alt=\"Mertz\" draggable={false} />\r\n              </button>\r\n              <button onClick={() => this.handleAddDialogBox(\"Zog\", false)}>\r\n                <img src={Zog} alt=\"Zog\" draggable={false} />\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {this.state.toggleShowCharChoice && (\r\n            ///THIS IS TEMPORARY\r\n            <div className=\"choose-next-character\" style={{ left: \"165px\" }}>\r\n              <button onClick={() => this.handleAddDialogBox(\"Bean\", true)}>\r\n                <img src={Bean} alt=\"Bean\" draggable={false} />\r\n              </button>\r\n              <button onClick={() => this.handleAddDialogBox(\"Elfo\", true)}>\r\n                <img src={Elfo} alt=\"Elfo\" draggable={false} />\r\n              </button>\r\n              <button onClick={() => this.handleAddDialogBox(\"Luci\", true)}>\r\n                <img src={Luci} alt=\"Luci\" draggable={false} />\r\n              </button>\r\n              <button onClick={() => this.handleAddDialogBox(\"Mertz\", true)}>\r\n                <img src={Mertz} alt=\"Mertz\" draggable={false} />\r\n              </button>\r\n              <button onClick={() => this.handleAddDialogBox(\"Zog\", true)}>\r\n                <img src={Zog} alt=\"Zog\" draggable={false} />\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTopBar.propTypes = {\r\n  addDialogBox: PropTypes.func.isRequired,\r\n  howManyDialogBoxes: PropTypes.number.isRequired,\r\n  dialogBoxInfo: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  howManyDialogBoxes: state.dialog.howManyDialogBoxes,\r\n  dialogBoxInfo: state.dialog.dialogBoxInfo\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    addDialogBox\r\n  }\r\n)(TopBar);\r\n","import {\r\n  ADD_DIALOGBOX,\r\n  REMOVE_DIALOGBOX,\r\n  UPDATE_DIALOGBOX_TEXT,\r\n  UPDATE_DROPPING_ID,\r\n  UPDATE_DIAG_POSITION,\r\n  UPDATE_STATE,\r\n  CREATE_NODE_CONNECTION,\r\n  SORT_DIALOG_SEQUENCE\r\n} from \"./types.js\";\r\n\r\nexport const addDialogBox = (\r\n  characterName,\r\n  dBoxInfo,\r\n  isChoice\r\n) => async dispatch => {\r\n  let newId = 0;\r\n  let currentUsedId = [];\r\n  for (let i = 0; i < dBoxInfo.length; i++) {\r\n    currentUsedId.push(dBoxInfo[i].id);\r\n  }\r\n  while (currentUsedId.includes(newId)) {\r\n    newId++;\r\n  }\r\n  let newDialogBox = {\r\n    id: newId,\r\n    image: characterName,\r\n    isChoice: isChoice\r\n  };\r\n\r\n  dispatch({\r\n    type: ADD_DIALOGBOX,\r\n    payload: newDialogBox\r\n  });\r\n};\r\n\r\nexport const removeDialogBox = (\r\n  dialogBoxObject,\r\n  dialogBoxInfo\r\n) => async dispatch => {\r\n  let newdialogBoxInfo = dialogBoxInfo.filter(element => {\r\n    return element.id !== dialogBoxObject.id;\r\n  });\r\n\r\n  dispatch({\r\n    type: REMOVE_DIALOGBOX,\r\n    payload: newdialogBoxInfo\r\n  });\r\n};\r\nexport const updateDialogBoxText = (\r\n  text,\r\n  dialogBoxInfo,\r\n  id\r\n) => async dispatch => {\r\n  ///VERY POORLY OPTIMISED HERE\r\n\r\n  let newDialogBoxInfo = dialogBoxInfo;\r\n  for (let i = 0; i < dialogBoxInfo.length; i++) {\r\n    if (id === dialogBoxInfo[i].id) {\r\n      newDialogBoxInfo[i].content = text;\r\n    }\r\n  }\r\n  dispatch({\r\n    type: UPDATE_DIALOGBOX_TEXT,\r\n    payload: newDialogBoxInfo\r\n  });\r\n};\r\n\r\nexport const updateDroppingId = id => async dispatch => {\r\n  dispatch({\r\n    type: UPDATE_DROPPING_ID,\r\n    payload: id\r\n  });\r\n};\r\n\r\nexport const updateDiagPosition = (\r\n  position,\r\n  dialogBoxInfo,\r\n  id\r\n) => async dispatch => {\r\n  const newDialogBoxInfo = dialogBoxInfo;\r\n\r\n  newDialogBoxInfo[\r\n    dialogBoxInfo.findIndex(x => x.id === id)\r\n  ].diagPosition = position;\r\n  dispatch({\r\n    type: UPDATE_DIAG_POSITION,\r\n    payload: newDialogBoxInfo\r\n  });\r\n};\r\n\r\nexport const updateState = reset => async dispatch => {\r\n  let newPayload = reset;\r\n  dispatch({\r\n    type: UPDATE_STATE,\r\n    payload: newPayload\r\n  });\r\n};\r\n\r\nexport const createNodeConnection = (\r\n  startId,\r\n  endId,\r\n  nodeConnections,\r\n  dialogBoxInfo\r\n) => async dispatch => {\r\n  let newNodeConnections = nodeConnections;\r\n  let canAdd = true;\r\n  //find if end connection is a choice\r\n  const connectedToChoice = dialogBoxInfo.find(x => x.id === endId).isChoice;\r\n  let cutHere = [];\r\n  if (newNodeConnections.length > 0) {\r\n    for (let i = 0; i < newNodeConnections.length; i++) {\r\n      //remove connection if the connection already exists either way\r\n      if (\r\n        (newNodeConnections[i][0] === startId &&\r\n          newNodeConnections[i][1] === endId) ||\r\n        (newNodeConnections[i][1] === startId &&\r\n          newNodeConnections[i][0] === endId)\r\n      ) {\r\n        canAdd = false;\r\n        cutHere.push(i);\r\n      }\r\n      //remove other connections that this startID starts on any other connection\r\n      if (\r\n        newNodeConnections[i][0] === startId &&\r\n        dialogBoxInfo.find(x => x.id === newNodeConnections[i][1]).isChoice ===\r\n          false\r\n      )\r\n        cutHere.push(i);\r\n      else if (\r\n        newNodeConnections[i][0] === startId &&\r\n        dialogBoxInfo.find(x => x.id === newNodeConnections[i][1]).isChoice ===\r\n          true &&\r\n        connectedToChoice === false\r\n      )\r\n        cutHere.push(i);\r\n    }\r\n  }\r\n  cutHere.sort((a, b) => b - a);\r\n  cutHere.forEach(x => newNodeConnections.splice(x, 1));\r\n  if (canAdd) {\r\n    newNodeConnections.push([startId, endId]);\r\n  }\r\n  //console.log(nodeConnections);\r\n  dispatch({\r\n    type: CREATE_NODE_CONNECTION,\r\n    payload: newNodeConnections\r\n  });\r\n};\r\n\r\nexport const sortDialogSequence = (\r\n  nodeConnections,\r\n  dialogBoxInfo,\r\n  startFromHere,\r\n  previousSortedDialog\r\n) => async dispatch => {\r\n  let sortedIDSequence = [];\r\n  let sortedDialogSequence = [];\r\n\r\n  //if started from choice remove the other choices\r\n\r\n  if (startFromHere !== undefined) {\r\n    sortedDialogSequence = previousSortedDialog;\r\n    let choiceStart = null;\r\n    for (let i = 0; i < nodeConnections.length; i++) {\r\n      if (nodeConnections[i][1] === startFromHere) {\r\n        choiceStart = nodeConnections[i][0];\r\n      }\r\n    }\r\n    for (let i = 0; i < nodeConnections.length; i++) {\r\n      if (nodeConnections[i][0] === choiceStart) {\r\n        sortedDialogSequence = sortedDialogSequence.filter(\r\n          element => element.id !== nodeConnections[i][1]\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  //find first node\r\n  let foundNumbers = [];\r\n  let notAvailableNumbers = [];\r\n  let startNode = null;\r\n  let endNode = [];\r\n  for (let i = 0; i < nodeConnections.length; i++) {\r\n    if (foundNumbers.includes(nodeConnections[i][0]))\r\n      notAvailableNumbers.push(nodeConnections[i][0]);\r\n    else {\r\n      foundNumbers.push(nodeConnections[i][0]);\r\n    }\r\n\r\n    if (foundNumbers.includes(nodeConnections[i][1]))\r\n      notAvailableNumbers.push(nodeConnections[i][1]);\r\n    else {\r\n      foundNumbers.push(nodeConnections[i][1]);\r\n    }\r\n  }\r\n\r\n  ///CAN BE OPTIMISED\r\n  const GetFirstNode = () => {\r\n    let startAndEndNodes = foundNumbers.filter(\r\n      x => !notAvailableNumbers.includes(x)\r\n    );\r\n    //console.log(\"start and end nodes\" + startAndEndNodes);\r\n    for (let i = 0; i < nodeConnections.length; i++) {\r\n      if (\r\n        startAndEndNodes.includes(nodeConnections[i][0]) &&\r\n        !dialogBoxInfo[\r\n          dialogBoxInfo.findIndex(x => x.id === nodeConnections[i][0])\r\n        ].isChoice\r\n      ) {\r\n        startNode = nodeConnections[i][0];\r\n      }\r\n      if (\r\n        startAndEndNodes.includes(nodeConnections[i][1]) &&\r\n        !dialogBoxInfo[\r\n          dialogBoxInfo.findIndex(x => x.id === nodeConnections[i][1])\r\n        ].isChoice\r\n      ) {\r\n        endNode.push(nodeConnections[i][1]);\r\n      }\r\n    }\r\n  };\r\n\r\n  //console.log(\"start from here\" + startFromHere);\r\n  if (startFromHere !== undefined) {\r\n    startNode = startFromHere;\r\n  } else {\r\n    GetFirstNode();\r\n  }\r\n  //console.log(\"start node \" + startNode);\r\n  //console.log(\"end nod\" + endNode);\r\n  //fill in the rest of the node sequence\r\n\r\n  let numberLookingFor = startNode;\r\n  let choices = [];\r\n  let canContinue = true;\r\n\r\n  sortedIDSequence.push(startNode);\r\n  sortedDialogSequence.push(\r\n    dialogBoxInfo[dialogBoxInfo.findIndex(x => x.id === startNode)]\r\n  );\r\n\r\n  const AddNodeToSort = () => {\r\n    nodeConnections.forEach(element => {\r\n      if (element[0] === numberLookingFor && canContinue) {\r\n        //number looking for updated\r\n        numberLookingFor = element[1];\r\n        //add second dialog box\r\n        sortedIDSequence.push(element[1]);\r\n        sortedDialogSequence.push(\r\n          dialogBoxInfo[dialogBoxInfo.findIndex(x => x.id === element[1])]\r\n        );\r\n        //if second dialog box is a choice then push the first dialog box id for later\r\n        if (\r\n          dialogBoxInfo[dialogBoxInfo.findIndex(x => x.id === element[1])]\r\n            .isChoice\r\n        ) {\r\n          choices.push(\r\n            dialogBoxInfo[dialogBoxInfo.findIndex(x => x.id === element[0])].id\r\n          );\r\n          canContinue = false;\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const GetAllChoices = choiceID => {\r\n    nodeConnections.forEach(element => {\r\n      if (element[0] === choiceID && !sortedIDSequence.includes(element[1])) {\r\n        sortedIDSequence.push(element[1]);\r\n        sortedDialogSequence.push(\r\n          dialogBoxInfo[dialogBoxInfo.findIndex(x => x.id === element[1])]\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  for (let i = 0; i < 100; i++) {\r\n    if (\r\n      endNode.includes(numberLookingFor) ||\r\n      choices.length !== 0 ||\r\n      !canContinue\r\n    ) {\r\n      AddNodeToSort();\r\n      if (choices.length !== 0) {\r\n        GetAllChoices(choices[0]);\r\n      }\r\n      break;\r\n    }\r\n    canContinue = true;\r\n    AddNodeToSort();\r\n  }\r\n\r\n  if (sortedDialogSequence[0] === undefined) {\r\n    sortedDialogSequence = [];\r\n  }\r\n\r\n  //console.log(\"end sorted id\" + sortedIDSequence);\r\n  //console.log(\"end sorted dialog\" + sortedDialogSequence);\r\n  //console.log(\"end choices\" + choices);\r\n\r\n  dispatch({\r\n    type: SORT_DIALOG_SEQUENCE,\r\n    payload: sortedDialogSequence\r\n  });\r\n};\r\n","export const ADD_DIALOGBOX = \"ADD_DIALOGBOX\";\r\nexport const REMOVE_DIALOGBOX = \"REMOVE_DIALOGBOX\";\r\nexport const UPDATE_DIALOGBOX_TEXT = \"UPDATE_DIALOGBOX_TEXT\";\r\nexport const UPDATE_DROPPING_ID = \"UPDATE_DROPPING_ID\";\r\nexport const UPDATE_DIAG_POSITION = \"UPDATE_DIAG_POSITION\";\r\nexport const UPDATE_STATE = \"UPDATE_STATE\";\r\nexport const CREATE_NODE_CONNECTION = \"CREATE_NODE_CONNECTION\";\r\nexport const SORT_DIALOG_SEQUENCE = \"SORT_DIALOG_SEQUENCE\";\r\n","import React, { Component } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport {\r\n  removeDialogBox,\r\n  updateDialogBoxText,\r\n  updateDroppingId,\r\n  updateDiagPosition,\r\n  updateState,\r\n  createNodeConnection\r\n} from \"../actions/dialogActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass DialogPiece extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleUpdateText = this.handleUpdateText.bind(this);\r\n    this.handleNodeDrag = this.handleNodeDrag.bind(this);\r\n    this.handleDiagDrag = this.handleDiagDrag.bind(this);\r\n    this.handleDiagStop = this.handleDiagStop.bind(this);\r\n    this.handleStop = this.handleStop.bind(this);\r\n    this.handleDropEnter = this.handleDropEnter.bind(this);\r\n    this.handleDropLeave = this.handleDropLeave.bind(this);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.checkWhichColorNode = this.checkWhichColorNode.bind(this);\r\n\r\n    this.state = {\r\n      nodeDragging: false,\r\n      pointerEvent: \"auto\",\r\n      deltaPosition: this.props.character.diagPosition,\r\n      startPosition: {\r\n        x: this.props.character.diagPosition[0],\r\n        y: this.props.character.diagPosition[1]\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      startPosition: null\r\n    });\r\n  }\r\n\r\n  handleUpdateText(e) {\r\n    this.props.updateDialogBoxText(\r\n      e.target.value,\r\n      this.props.dialogBoxInfo,\r\n      this.props.character.id\r\n    );\r\n  }\r\n\r\n  handleNodeDrag() {\r\n    this.setState({ nodeDragging: true, pointerEvent: \"none\" });\r\n  }\r\n\r\n  handleDiagDrag(e, ui) {\r\n    const newPos = [\r\n      this.state.deltaPosition[0] + ui.deltaX,\r\n      this.state.deltaPosition[1] + ui.deltaY\r\n    ];\r\n    this.props.updateState(1);\r\n    this.setState({ deltaPosition: newPos });\r\n    this.props.updateDiagPosition(\r\n      this.state.deltaPosition,\r\n      this.props.dialogBoxInfo,\r\n      this.props.character.id\r\n    );\r\n  }\r\n\r\n  handleDiagStop() {\r\n    this.props.updateDiagPosition(\r\n      this.state.deltaPosition,\r\n      this.props.dialogBoxInfo,\r\n      this.props.character.id\r\n    );\r\n    this.props.updateState(\"reset\");\r\n  }\r\n\r\n  handleStop() {\r\n    this.setState({ nodeDragging: false, pointerEvent: \"auto\" });\r\n    //console.log(`will drop on ${this.props.droppingId}`);\r\n    if (this.props.droppingId !== null) {\r\n      this.props.createNodeConnection(\r\n        this.props.character.id,\r\n        this.props.droppingId,\r\n        this.props.nodeConnections,\r\n        this.props.dialogBoxInfo\r\n      );\r\n    }\r\n    this.props.updateState(1);\r\n  }\r\n\r\n  handleDropEnter() {\r\n    if (this.state.nodeDragging === false) {\r\n      this.props.updateDroppingId(this.props.character.id);\r\n    }\r\n  }\r\n  handleDropLeave() {\r\n    this.props.updateDroppingId(null);\r\n  }\r\n\r\n  checkWhichColorNode() {\r\n    let newColor = \"darkgray\";\r\n    if (this.props.nodeConnections.length > 0) {\r\n      this.props.nodeConnections.forEach(x => {\r\n        if (x[1] === this.props.character.id) {\r\n          newColor = \"#7dcdd0\";\r\n        }\r\n      });\r\n    }\r\n    const newTop = \"-3px\";\r\n    const newStyle = {\r\n      top: newTop,\r\n      background: newColor,\r\n      border: `2px solid ${this.borderColor()[0]}`\r\n    };\r\n    return newStyle;\r\n  }\r\n\r\n  borderColor() {\r\n    const choiceColors = [\"#1b5f50\", \"#42bd92\", \"#bdddc9\"];\r\n    const diagColors = [\"#54302c\", \"#b87953\", \"#d9cabd\"];\r\n    if (this.props.character.isChoice) {\r\n      return choiceColors;\r\n    }\r\n\r\n    return diagColors;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Draggable\r\n        axis=\"both\"\r\n        handle=\".dialog-character-pic\"\r\n        defaultPosition={{ x: 0, y: 0 }}\r\n        position={this.state.startPosition}\r\n        bounds=\".dialog-editor\"\r\n        scale={1}\r\n        onDrag={this.handleDiagDrag}\r\n        onStop={this.handleDiagStop}\r\n      >\r\n        <div\r\n          className=\"dialog-piece\"\r\n          onMouseEnter={this.handleDropEnter}\r\n          onMouseLeave={this.handleDropLeave}\r\n          style={{\r\n            pointerEvents: this.state.pointerEvent,\r\n            boxShadow: `inset 0 0 2px 1px ${\r\n              this.borderColor()[0]\r\n            }, inset 0 0 2px 4px ${this.borderColor()[1]}, inset 0 0 1px 5px ${\r\n              this.borderColor()[2]\r\n            } `,\r\n            border: `1px solid ${this.borderColor()[0]}`,\r\n            background: this.borderColor()[0]\r\n          }}\r\n        >\r\n          <button\r\n            className=\"delete-button\"\r\n            onClick={() =>\r\n              this.props.removeDialogBox(\r\n                this.props.character,\r\n                this.props.dialogBoxInfo\r\n              )\r\n            }\r\n          >\r\n            <span>&#10006;</span>\r\n          </button>\r\n          <div className=\"dialog-character-pic\">\r\n            <img\r\n              alt=\"profile pic\"\r\n              src={this.props.characterImage}\r\n              draggable={false}\r\n              style={{\r\n                border: `1px solid ${this.borderColor()[0]}`\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"dialog-content\">\r\n            <textarea\r\n              placeholder={`Hi I am ${this.props.character.image}`}\r\n              onChange={this.handleUpdateText}\r\n              style={{\r\n                border: `1px solid ${this.borderColor()[0]}`\r\n              }}\r\n              defaultValue={this.props.character.content}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"node-socket\" style={this.checkWhichColorNode()} />\r\n          <div\r\n            className=\"node-socket\"\r\n            style={{\r\n              bottom: \"-3px\",\r\n              border: `2px solid ${this.borderColor()[0]}`\r\n            }}\r\n          />\r\n\r\n          <Draggable\r\n            axis=\"both\"\r\n            handle=\".node-handle\"\r\n            position={{ x: 0, y: 0 }}\r\n            scale={1}\r\n            onDrag={this.handleNodeDrag}\r\n            onStop={this.handleStop}\r\n          >\r\n            <div\r\n              className=\"node-handle\"\r\n              id=\"node-handle\"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                border: `2px solid ${this.borderColor()[0]}`\r\n              }}\r\n            />\r\n          </Draggable>\r\n        </div>\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n\r\nDialogPiece.propTyes = {\r\n  removeDialogBox: PropTypes.func.isRequired,\r\n  updateDialogBoxText: PropTypes.func.isRequired,\r\n  updateDroppingId: PropTypes.func.isRequired,\r\n  updateDiagPosition: PropTypes.func.isRequired,\r\n  updateState: PropTypes.func.isRequired,\r\n  createNodeConnection: PropTypes.func.isRequired,\r\n  dialogBoxInfo: PropTypes.array.isRequired,\r\n  droppingId: PropTypes.number.isRequired,\r\n  nodeConnections: PropTypes.array.isRequired,\r\n  stateChanged: PropTypes.number.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  dialogBoxInfo: state.dialog.dialogBoxInfo,\r\n  droppingId: state.dialog.droppingId,\r\n  nodeConnections: state.dialog.nodeConnections,\r\n  stateChanged: state.dialog.stateChanged\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    removeDialogBox,\r\n    updateDialogBoxText,\r\n    updateDroppingId,\r\n    updateDiagPosition,\r\n    updateState,\r\n    createNodeConnection\r\n  }\r\n)(DialogPiece);\r\n","import React, { Component } from \"react\";\r\nimport DialogPiece from \"./DialogPiece.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Bean,\r\n  Elfo,\r\n  Luci,\r\n  Mertz,\r\n  Zog,\r\n  PortraitPlaceholder\r\n} from \"./images/Images\";\r\n\r\nclass DialogEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checkHowManyDialogsToShow = this.checkHowManyDialogsToShow.bind(this);\r\n    this.renderNodeConnections = this.renderNodeConnections.bind(this);\r\n  }\r\n\r\n  checkHowManyDialogsToShow() {\r\n    let dialogPieceCount = [];\r\n    for (let i = 0; i < this.props.dialogBoxInfo.length; i++) {\r\n      let charImage = PortraitPlaceholder;\r\n      switch (this.props.dialogBoxInfo[i].image) {\r\n        case \"Bean\":\r\n          charImage = Bean;\r\n          break;\r\n        case \"Elfo\":\r\n          charImage = Elfo;\r\n          break;\r\n        case \"Luci\":\r\n          charImage = Luci;\r\n          break;\r\n        case \"Mertz\":\r\n          charImage = Mertz;\r\n          break;\r\n        case \"Zog\":\r\n          charImage = Zog;\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      const newDialogPiece = (\r\n        <DialogPiece\r\n          key={this.props.dialogBoxInfo[i].id}\r\n          characterImage={charImage}\r\n          character={this.props.dialogBoxInfo[i]}\r\n        />\r\n      );\r\n      dialogPieceCount.push(newDialogPiece);\r\n    }\r\n    return dialogPieceCount;\r\n  }\r\n\r\n  renderNodeConnections() {\r\n    let nodeRender = [];\r\n    if (this.props.nodeConnections.length > 0) {\r\n      for (let i = 0; i < this.props.nodeConnections.length; i++) {\r\n        const startPoint = this.props.dialogBoxInfo[\r\n          this.props.dialogBoxInfo.findIndex(\r\n            x => x.id === this.props.nodeConnections[i][0]\r\n          )\r\n        ];\r\n        const endPoint = this.props.dialogBoxInfo[\r\n          this.props.dialogBoxInfo.findIndex(\r\n            x => x.id === this.props.nodeConnections[i][1]\r\n          )\r\n        ];\r\n        const newLine = (\r\n          <svg\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            key={i}\r\n            style={{\r\n              position: \"absolute\",\r\n              pointerEvents: \"none\"\r\n            }}\r\n          >\r\n            <line\r\n              x1={startPoint.diagPosition[0] + 213}\r\n              y1={startPoint.diagPosition[1] + 112}\r\n              x2={endPoint.diagPosition[0] + 213}\r\n              y2={endPoint.diagPosition[1] + 2}\r\n              stroke=\"black\"\r\n            />\r\n          </svg>\r\n        );\r\n        nodeRender.push(newLine);\r\n      }\r\n    }\r\n    return nodeRender;\r\n  }\r\n\r\n  render() {\r\n    let dialogPieceRender = this.checkHowManyDialogsToShow();\r\n    let nodes = this.renderNodeConnections();\r\n    return (\r\n      <div className=\"dialog-editor\">\r\n        <div className=\"grid-background\">\r\n          {dialogPieceRender}\r\n          {nodes}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDialogEditor.propTypes = {\r\n  howManyDialogBoxes: PropTypes.number.isRequired,\r\n  dialogBoxInfo: PropTypes.array.isRequired,\r\n  stateChanged: PropTypes.number.isRequired,\r\n  nodeConnections: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  howManyDialogBoxes: state.dialog.howManyDialogBoxes,\r\n  dialogBoxInfo: state.dialog.dialogBoxInfo,\r\n  stateChanged: state.dialog.stateChanged,\r\n  nodeConnections: state.dialog.nodeConnections\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(DialogEditor);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { sortDialogSequence } from \"../actions/dialogActions\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Bean,\r\n  Elfo,\r\n  Luci,\r\n  Mertz,\r\n  Zog,\r\n  PortraitPlaceholder\r\n} from \"./images/Images\";\r\n\r\nclass DialogTester extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleDialogTestStart = this.toggleDialogTestStart.bind(this);\r\n    this.renderDialogBoxes = this.renderDialogBoxes.bind(this);\r\n    this.continueDialogSequence = this.continueDialogSequence.bind(this);\r\n    this.backButton = this.backButton.bind(this);\r\n    this.restartButton = this.restartButton.bind(this);\r\n    this.choiceOnClick = this.choiceOnClick.bind(this);\r\n    this.state = { dialogTestStart: false, showingDialog: 0 };\r\n  }\r\n\r\n  toggleDialogTestStart() {\r\n    console.log(this.props.dialogBoxInfo);\r\n    console.log(this.props.nodeConnections);\r\n    console.log(this.props.howManyDialogBoxes);\r\n    this.setState({\r\n      dialogTestStart: !this.state.dialogTestStart,\r\n      showingDialog: 0\r\n    });\r\n    this.props.sortDialogSequence(\r\n      this.props.nodeConnections,\r\n      this.props.dialogBoxInfo\r\n    );\r\n    this.renderDialogBoxes();\r\n  }\r\n\r\n  continueDialogSequence() {\r\n    if (this.state.showingDialog + 1 < this.props.sortedDialogSequence.length) {\r\n      if (\r\n        this.props.sortedDialogSequence[this.state.showingDialog + 1].isChoice\r\n      ) {\r\n        this.setState({\r\n          showingDialog: this.props.sortedDialogSequence.length - 1\r\n        });\r\n      } else {\r\n        this.setState({ showingDialog: this.state.showingDialog + 1 });\r\n      }\r\n    }\r\n  }\r\n\r\n  renderDialogBoxes() {\r\n    let dialogRender = [];\r\n    //console.log(\"render this many\" + this.state.showingDialog + 1);\r\n    if (\r\n      this.state.dialogTestStart &&\r\n      this.props.sortedDialogSequence.length > 0\r\n    ) {\r\n      for (let i = 0; i <= this.state.showingDialog; i++) {\r\n        if (this.props.sortedDialogSequence[i]) {\r\n          const text = this.props.sortedDialogSequence[i].content;\r\n          let charImage = PortraitPlaceholder;\r\n          switch (this.props.sortedDialogSequence[i].image) {\r\n            case \"Bean\":\r\n              charImage = Bean;\r\n              break;\r\n            case \"Elfo\":\r\n              charImage = Elfo;\r\n              break;\r\n            case \"Luci\":\r\n              charImage = Luci;\r\n              break;\r\n            case \"Mertz\":\r\n              charImage = Mertz;\r\n              break;\r\n            case \"Zog\":\r\n              charImage = Zog;\r\n              break;\r\n            default:\r\n              return;\r\n          }\r\n\r\n          const nameOfClass = this.props.sortedDialogSequence[i].isChoice\r\n            ? \"choice-test-render\"\r\n            : \"dialog-test-render\";\r\n\r\n          const newRender = (\r\n            <div\r\n              className={nameOfClass}\r\n              key={i}\r\n              onClick={() =>\r\n                this.choiceOnClick(\r\n                  this.props.sortedDialogSequence[i].id,\r\n                  this.props.sortedDialogSequence[i].isChoice\r\n                )\r\n              }\r\n            >\r\n              <img\r\n                src={charImage}\r\n                alt={this.props.sortedDialogSequence[i].image}\r\n              />\r\n              <h3>{this.props.sortedDialogSequence[i].image}</h3>\r\n              <p>{text}</p>\r\n            </div>\r\n          );\r\n          dialogRender.push(newRender);\r\n        }\r\n      }\r\n    }\r\n    return dialogRender;\r\n  }\r\n\r\n  restartButton() {\r\n    this.setState({\r\n      showingDialog: 0,\r\n      dialogTestStart: !this.state.dialogTestStart\r\n    });\r\n  }\r\n\r\n  backButton() {\r\n    if (\r\n      !this.props.sortedDialogSequence[this.state.showingDialog - 1].isChoice\r\n    ) {\r\n      this.setState({ showingDialog: this.state.showingDialog - 1 });\r\n    }\r\n  }\r\n\r\n  choiceOnClick(id, isAChoice) {\r\n    if (isAChoice) {\r\n      this.props.sortDialogSequence(\r\n        this.props.nodeConnections,\r\n        this.props.dialogBoxInfo,\r\n        id,\r\n        this.props.sortedDialogSequence\r\n      );\r\n      let choiceStart = null;\r\n      for (let i = 0; i < this.props.nodeConnections.length; i++) {\r\n        if (this.props.nodeConnections[i][1] === id) {\r\n          choiceStart = this.props.nodeConnections[i][0];\r\n        }\r\n      }\r\n      let newSorted = this.props.sortedDialogSequence.filter(\r\n        element => element[0] !== choiceStart || element[1] === id\r\n      );\r\n      this.setState({\r\n        showingDialog: newSorted.length - 1\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let renderTheDialog = this.renderDialogBoxes();\r\n    return (\r\n      <div\r\n        className=\"dialog-tester\"\r\n        onAnimationEnd={this.props.toggleHideEditor}\r\n      >\r\n        <div className=\"dialog-test-here\">\r\n          {!this.state.dialogTestStart && (\r\n            <button\r\n              className=\"start-dialog-button\"\r\n              onClick={this.toggleDialogTestStart}\r\n            >\r\n              START\r\n            </button>\r\n          )}\r\n          {this.state.dialogTestStart && (\r\n            <div\r\n              className=\"continue-arrow\"\r\n              onClick={this.continueDialogSequence}\r\n            >\r\n              <img\r\n                src=\"https://img.icons8.com/metro/26/000000/forward.png\"\r\n                alt=\"forward\"\r\n                draggable={false}\r\n              />\r\n            </div>\r\n          )}\r\n          {this.state.dialogTestStart && (\r\n            <div\r\n              className=\"dialog-render-area\"\r\n              onClick={this.continueDialogSequence}\r\n            >\r\n              {renderTheDialog}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"bottom-bar\">\r\n          <button className=\"go-back-button\" onClick={this.backButton}>\r\n            <img\r\n              src=\"https://img.icons8.com/metro/26/000000/back.png\"\r\n              alt=\"back\"\r\n              draggable={false}\r\n            />\r\n          </button>\r\n          <button className=\"restart-button\" onClick={this.restartButton}>\r\n            <img\r\n              src=\"https://img.icons8.com/metro/26/000000/recurring-appointment.png\"\r\n              alt=\"restart\"\r\n              draggable={false}\r\n            />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDialogTester.propTypes = {\r\n  sortDialogSequence: PropTypes.func.isRequired,\r\n  dialogBoxInfo: PropTypes.array.isRequired,\r\n  nodeConnections: PropTypes.array.isRequired,\r\n  sortedDialogSequence: PropTypes.array.isRequired,\r\n  howManyDialogBoxes: PropTypes.number.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  dialogBoxInfo: state.dialog.dialogBoxInfo,\r\n  nodeConnections: state.dialog.nodeConnections,\r\n  sortedDialogSequence: state.dialog.sortedDialogSequence,\r\n  howManyDialogBoxes: state.dialog.howManyDialogBoxes\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { sortDialogSequence }\r\n)(DialogTester);\r\n","import {\r\n  ADD_DIALOGBOX,\r\n  REMOVE_DIALOGBOX,\r\n  UPDATE_DIALOGBOX_TEXT,\r\n  UPDATE_DROPPING_ID,\r\n  UPDATE_DIAG_POSITION,\r\n  UPDATE_STATE,\r\n  CREATE_NODE_CONNECTION,\r\n  SORT_DIALOG_SEQUENCE\r\n} from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  howManyDialogBoxes: 43,\r\n  dialogBoxInfo: [\r\n    {\r\n      id: 0,\r\n      image: \"Bean\",\r\n      content: \"Ugh... where are we?\",\r\n      diagPosition: [619, 0],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 1,\r\n      image: \"Elfo\",\r\n      content:\r\n        \"I don't know. I'm just glad your mum didn't make me the cult leader.\",\r\n      diagPosition: [618, 122],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 2,\r\n      image: \"Luci\",\r\n      content:\r\n        \"Come on guys lets get out of here. Your mum will find us soon and I'm sure your dad is still mad at us.\",\r\n      diagPosition: [618, 489],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 3,\r\n      image: \"Bean\",\r\n      content:\r\n        \"Ummm... Elfo I'm pretty sure mum wanted me to be the cult leader. The picture clearly had me in it.\",\r\n      diagPosition: [618, 240],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 4,\r\n      image: \"Elfo\",\r\n      content:\r\n        \"Yeah, whatever Bean. You're just jealous because your mum likes me more.\",\r\n      diagPosition: [618, 363],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 5,\r\n      image: \"Elfo\",\r\n      content:\r\n        \"No! Why do you get to decide everything? I want to ask Beans mum who she really likes more.\",\r\n      diagPosition: [614, 610],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 6,\r\n      image: \"Bean\",\r\n      content: \"Stop being silly Elfo and follow us already.\",\r\n      diagPosition: [614, 754],\r\n      isChoice: true\r\n    },\r\n    {\r\n      id: 7,\r\n      image: \"Bean\",\r\n      content:\r\n        \"All right then why don't we find out who MY mum likes more HUH.\",\r\n      diagPosition: [74, 745],\r\n      isChoice: true\r\n    },\r\n    {\r\n      id: 8,\r\n      image: \"Luci\",\r\n      content: \"Well I did try to warn you guys. I'm out PEACE.\",\r\n      diagPosition: [72, 874],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 9,\r\n      image: \"Elfo\",\r\n      content:\r\n        \"Your mum must be on the other side of this very ominous looking door.\",\r\n      diagPosition: [71, 1001],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 10,\r\n      image: \"Bean\",\r\n      content: \"NO! ELFO DON'T!\",\r\n      diagPosition: [75, 1131],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 11,\r\n      image: \"Elfo\",\r\n      content: \"AHHHHHHHH!!!!\",\r\n      diagPosition: [71, 1259],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 12,\r\n      image: \"Elfo\",\r\n      content: \"Okay fine, but you owe me 3 and a half chocolate coins.\",\r\n      diagPosition: [627, 884],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 13,\r\n      image: \"Bean\",\r\n      content: \"Okay, guys this way!\",\r\n      diagPosition: [627, 1018],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 14,\r\n      image: \"Zog\",\r\n      content:\r\n        \"GAH! Why haven't my wife and daughter been executed yet for betraying me.\",\r\n      diagPosition: [627, 1155],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 15,\r\n      image: \"Mertz\",\r\n      content:\r\n        \"Well sire, it seems they have gone pretty far away while we were turned to stone.\",\r\n      diagPosition: [628, 1286],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 16,\r\n      image: \"Zog\",\r\n      content:\r\n        \"I'm pretty sure she brought Bean back to her home land. You better give me their heads by tonight or there will be hell to pay.\",\r\n      diagPosition: [625, 1430],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 17,\r\n      image: \"Mertz\",\r\n      content: \"All right!\",\r\n      diagPosition: [630, 1564],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 18,\r\n      image: \"Mertz\",\r\n      content: \"I'm going to get the other knights first and then I'll be off.\",\r\n      diagPosition: [263, 1716],\r\n      isChoice: true\r\n    },\r\n    {\r\n      id: 19,\r\n      image: \"Mertz\",\r\n      content:\r\n        \"Guess I'll be on my own, for this quest, not knowing if I'll return. I hope you will miss me sire.\",\r\n      diagPosition: [901, 1718],\r\n      isChoice: true\r\n    },\r\n    {\r\n      id: 20,\r\n      image: \"Mertz\",\r\n      content: \"Hey is that Princess Teabeanie's pet cat.\",\r\n      diagPosition: [264, 1989],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 21,\r\n      image: \"Mertz\",\r\n      content:\r\n        \"I guess only Turbish is the only knight left without his head cut off...\",\r\n      diagPosition: [263, 1857],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 22,\r\n      image: \"Luci\",\r\n      content: \"Sup. What are you guys doing here?\",\r\n      diagPosition: [269, 2120],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 23,\r\n      image: \"Mertz\",\r\n      content:\r\n        \"We are here under king Zog's orders to capture or kill you. Honestly we don't want to kill you princess, so please cooperate.\",\r\n      diagPosition: [9, 2271],\r\n      isChoice: true\r\n    },\r\n    {\r\n      id: 24,\r\n      image: \"Mertz\",\r\n      content: \"Ummm, we're just here admiring the Maruvian sights.\",\r\n      diagPosition: [445, 2269],\r\n      isChoice: true\r\n    },\r\n    {\r\n      id: 25,\r\n      image: \"Bean\",\r\n      content: \"Ummm, okay then. We will just slowly back away from you guys.\",\r\n      diagPosition: [446, 2404],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 26,\r\n      image: \"Bean\",\r\n      content: \"AND RUN! GUYS LETS GET OUT OF HERE!!!!!\",\r\n      diagPosition: [452, 2536],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 27,\r\n      image: \"Luci\",\r\n      content: \"Are you kidding? Lets go Bean hurry.\",\r\n      diagPosition: [9, 2409],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 28,\r\n      image: \"Bean\",\r\n      content: \"AHHHH!!!!!!!!!!!!!!!!\",\r\n      diagPosition: [10, 2542],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 29,\r\n      image: \"Mertz\",\r\n      content:\r\n        \"Please no struggling princess. Just another week left till we arrive at dream land.\",\r\n      diagPosition: [13, 2678],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 30,\r\n      image: \"Mertz\",\r\n      content:\r\n        \"King Zog We have returned with princess Teabeanie and her weird friends.\",\r\n      diagPosition: [15, 2805],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 31,\r\n      image: \"Zog\",\r\n      content:\r\n        \"GAH! I said their heads not their bodies attached with them. Now how can I kill them while they look at me like that. Gah! why do I have to be like this. Oh well... BEAN! Go to your room.\",\r\n      diagPosition: [12, 2946],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 32,\r\n      image: \"Mertz\",\r\n      content:\r\n        \"Oh man how am I going to fight them off all by my self. No Mertz you got this!\",\r\n      diagPosition: [901, 1852],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 33,\r\n      image: \"Mertz\",\r\n      content: \"Hey is that Princess Teabeanie's pet cat.\",\r\n      diagPosition: [902, 1982],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 34,\r\n      image: \"Luci\",\r\n      content: \"Sup. What are you doing here?\",\r\n      diagPosition: [898, 2119],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 35,\r\n      image: \"Mertz\",\r\n      content: \"Umm, I'm just here admiring the Maruvian sights.\",\r\n      diagPosition: [885, 2269],\r\n      isChoice: true\r\n    },\r\n    {\r\n      id: 36,\r\n      image: \"Mertz\",\r\n      content:\r\n        \"I am here under king Zog's orders to capture you or kill you. Honestly I don't want to kill you princess, so please cooperate.\",\r\n      diagPosition: [1311, 2270],\r\n      isChoice: true\r\n    },\r\n    {\r\n      id: 37,\r\n      image: \"Bean\",\r\n      content: \"Ummm, okay then. We will just slowly back away from you.\",\r\n      diagPosition: [883, 2397],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 38,\r\n      image: \"Bean\",\r\n      content: \"Like hell we are. Lets get him guys!\",\r\n      diagPosition: [1307, 2391],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 39,\r\n      image: \"Bean\",\r\n      content: \"AND RUN! GUYS LETS GET OUT OF HERE!!!!\",\r\n      diagPosition: [879, 2530],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 40,\r\n      image: \"Bean\",\r\n      content:\r\n        \"Shut up Luci. Now is not the time for your dumb jokes. I just wanted some quality time with mum you know. Maybe I should follow her.\",\r\n      diagPosition: [1309, 2796],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 41,\r\n      image: \"Luci\",\r\n      content:\r\n        \"I say embrace your prophecy. No one can step up to you and your army of murloc people. HAHAHA\",\r\n      diagPosition: [1303, 2666],\r\n      isChoice: false\r\n    },\r\n    {\r\n      id: 42,\r\n      image: \"Bean\",\r\n      content:\r\n        \"Yeah!!! We killed him. Wait we killed him. Damn it I am cursed. Guys what do I do.\",\r\n      diagPosition: [1305, 2538],\r\n      isChoice: false\r\n    }\r\n  ],\r\n  droppingId: null,\r\n  stateChanged: 0,\r\n  nodeConnections: [\r\n    [0, 1],\r\n    [1, 3],\r\n    [3, 4],\r\n    [4, 2],\r\n    [2, 5],\r\n    [5, 6],\r\n    [5, 7],\r\n    [7, 8],\r\n    [8, 9],\r\n    [9, 10],\r\n    [10, 11],\r\n    [12, 13],\r\n    [13, 14],\r\n    [14, 15],\r\n    [15, 16],\r\n    [16, 17],\r\n    [17, 19],\r\n    [17, 18],\r\n    [18, 21],\r\n    [21, 20],\r\n    [20, 22],\r\n    [19, 32],\r\n    [32, 33],\r\n    [33, 34],\r\n    [22, 23],\r\n    [22, 24],\r\n    [23, 27],\r\n    [27, 28],\r\n    [28, 29],\r\n    [29, 30],\r\n    [30, 31],\r\n    [24, 25],\r\n    [25, 26],\r\n    [34, 35],\r\n    [34, 36],\r\n    [35, 37],\r\n    [37, 39],\r\n    [36, 38],\r\n    [38, 42],\r\n    [42, 41],\r\n    [41, 40],\r\n    [6, 12]\r\n  ],\r\n  sortedDialogSequence: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_DIALOGBOX:\r\n      let newDialogBoxInfo = state.dialogBoxInfo;\r\n      newDialogBoxInfo.push({\r\n        id: action.payload.id,\r\n        image: action.payload.image,\r\n        content: \"\",\r\n        diagPosition: [0, 0],\r\n        isChoice: action.payload.isChoice\r\n      });\r\n      return {\r\n        ...state,\r\n        dialogBoxInfo: newDialogBoxInfo,\r\n        howManyDialogBoxes: newDialogBoxInfo.length\r\n      };\r\n    case REMOVE_DIALOGBOX:\r\n      return {\r\n        ...state,\r\n        dialogBoxInfo: action.payload,\r\n        howManyDialogBoxes: action.payload.length\r\n      };\r\n    case UPDATE_DIALOGBOX_TEXT:\r\n      return {\r\n        ...state,\r\n        dialogBoxInfo: action.payload,\r\n        howManyDialogBoxes: action.payload.length\r\n      };\r\n    case UPDATE_DROPPING_ID:\r\n      return {\r\n        ...state,\r\n        droppingId: action.payload\r\n      };\r\n    case UPDATE_DIAG_POSITION:\r\n      return {\r\n        ...state,\r\n        dialogBoxInfo: action.payload,\r\n        howManyDialogBoxes: action.payload.length\r\n      };\r\n    case UPDATE_STATE:\r\n      if (action.payload === \"reset\") {\r\n        return {\r\n          ...state,\r\n          stateChanged: 0\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          stateChanged: state.stateChanged + action.payload\r\n        };\r\n      }\r\n    case CREATE_NODE_CONNECTION:\r\n      return {\r\n        ...state,\r\n        nodeConnections: action.payload\r\n      };\r\n    case SORT_DIALOG_SEQUENCE:\r\n      return {\r\n        ...state,\r\n        sortedDialogSequence: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport dialogReducer from \"./dialogReducer\";\r\n\r\nexport default combineReducers({\r\n  dialog: dialogReducer\r\n});\r\n","import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport TopBar from \"./components/TopBar\";\r\nimport DialogEditor from \"./components/DialogEditor\";\r\nimport DialogTester from \"./components/DialogTester\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleShowTester = this.toggleShowTester.bind(this);\r\n    this.toggleHideEditor = this.toggleHideEditor.bind(this);\r\n    this.state = {\r\n      showTester: false,\r\n      hideEditor: false\r\n    };\r\n  }\r\n\r\n  toggleShowTester() {\r\n    this.setState({ showTester: !this.state.showTester });\r\n  }\r\n\r\n  toggleHideEditor() {\r\n    this.setState({ hideEditor: !this.state.hideEditor });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <TopBar\r\n          toggleTest={this.toggleShowTester}\r\n          editorState={this.state.hideEditor}\r\n          toggleHideEditor={this.toggleHideEditor}\r\n        />\r\n        {!this.state.hideEditor && <DialogEditor />}\r\n        {this.state.showTester && (\r\n          <DialogTester toggleHideEditor={this.toggleHideEditor} />\r\n        )}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}